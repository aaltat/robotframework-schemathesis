name: release

on:
  push:
    branches: [ main ]

jobs:
  release:
    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: 3.13
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv sync --locked --all-extras --dev
      - name: Lint code
        run: |
          uv run inv lint
      - name: Run tests
        run: |
          uv run inv atest
      - name: Upload runner test results
        uses: actions/upload-artifact@v4
        with:
          name: atest-result-runner-python-3.13
          path: atest/output_runner/
      - name: Upload runner test results
        uses: actions/upload-artifact@v4
        with:
          name: atest-result-library-python-3.13
          path: atest/output_library/
      - name: Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@v10.1.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: minor
      - name: Create keyword documentation
        run: |
          uv run inv docs --set-version ${{ steps.release.outputs.version }}
          uv run inv docs
          uv run inv old-version-docs --version ${{ steps.release.outputs.version }}
        if: steps.release.outputs.released == 'true'
      - uses: EndBug/add-and-commit@v9
        name: Save keyword documentation
        with:
          add: "['docs/SchemathesisLibrary.html', 'docs/versions/SchemathesisLibrary-${{ steps.release.outputs.version }}.html', 'docs/versions/index.md']"
          author_name: Schemathesis Library
          author_email: Schemathesis@Library
          message: "Update keyword documentation for version ${{ steps.release.outputs.version }}"
        if: steps.release.outputs.released == 'true'
      - name: Create release
        run: |
          uv version ${{ steps.release.outputs.version }}
          uv build
          ls -l dist/
          uv publish
        if: steps.release.outputs.released == 'true'
